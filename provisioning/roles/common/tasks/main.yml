---
- name:           Determine optimal hostname
  command:        echo {{stage}}.{{domain}}
  register:       new_host
  ignore_errors:  True
  when:           stage is defined

- name:           Determine current hostname
  command:        hostname
  register:       old_host
  ignore_errors:  True
  when:           stage is defined

- name:           Update hostname
  hostname:       name={{new_host.stdout}}
  sudo:           yes
  when:           stage is defined and old_host.stdout != new_host.stdout

- name:           Update /etc/hosts for new hostname
  replace:        dest=/etc/hosts backup=yes regexp={{ old_host.stdout | replace(".","[.]") }} replace={{new_host.stdout}}
  sudo:           yes
  when:           stage is defined and old_host.stdout != new_host.stdout

- name:           Add Node apt-repository
  apt_repository: repo='ppa:chris-lea/node.js' state=present
  sudo:           yes

- name:           Update apt repositories
  apt:            update_cache=yes
  sudo:           yes

- name:           Install system packages
  apt:            pkg={{item}}
  with_items:     system_packages
  sudo:           yes

- name:           Install bower
  command:        npm install -g bower
  sudo:           yes

- name:           Install LAMP stack
  apt:            pkg={{item}}
  with_items:     lamp_packages
  sudo:           yes

- name:           Configure apache log rotation
  copy:           src=logrotate-apache dest=/etc/logrotate.d/apache2 owner=root group=root mode=644
  sudo:           yes

- name:           Ensure logrotate runs hourly
  command:        mv /etc/cron.daily/logrotate /etc/cron.hourly/logrotate
  args:
    creates:      /etc/cron.hourly/logrotate
    removes:      /etc/cron.daily/logrotate
  sudo:           yes

- name:           Install PHP packages
  apt:            pkg={{item}}
  with_items:     php_packages
  sudo:           yes

- name:           Enable Apache modules
  command:        a2enmod {{item}}
  with_items:     apache_modules
  sudo:           yes

- name:           Check for vagrant user
  command:        id -u vagrant
  register:       has_vagrant
  ignore_errors:  True

- name:           Add vagrant user to www-data
  user:           name=vagrant append=yes groups=www-data
  when:           has_vagrant.stdout
  sudo:           yes

- name:           Create deploy user
  user:           name=deploy append=yes groups=www-data shell=/bin/bash comment="Created by Genesis WordPress"
  sudo:           yes

- name:           Grant sudo access to deploy user
  copy:           content="%deploy ALL=(ALL) NOPASSWD:ALL" dest=/etc/sudoers.d/deploy mode=0440 force=no
  sudo:           yes

- name:           Add www-data user to deploy
  user:           name=www-data append=yes groups=deploy
  sudo:           yes

- name:           Test for git protocol (git://) connectivity
  command:        curl -v -m 10 http://github.com:9418/
  register:       git_protocol_test
  ignore_errors:  true

- name:           Bypass git protocol if necessary
  command:        git config --global url."https://".insteadOf git://
  when:           "'connect() timed out' in git_protocol_test.stderr"
  sudo:           yes
  sudo_user:      deploy

- name:           Calculate PHP memory_limit
  command:        echo "{{ 256 if ansible_memtotal_mb > 2048 else 128 }}"
  register:       calc_php_memory_limit
  ignore_errors:  True
  when:           php_settings.memory_limit is undefined

- name:           Update php.ini's memory_limit
  lineinfile:     dest=/etc/php5/apache2/php.ini backup=yes regexp='memory_limit' line='memory_limit = {{ calc_php_memory_limit.stdout if calc_php_memory_limit.stdout is defined else php_settings.memory_limit }}M'
  sudo:           yes

- name:           Create custom apache prefork config
  template:       src=prefork.conf dest=/etc/apache2/prefork.conf mode=0644 validate='/usr/sbin/apache2ctl -f %s -t'
  sudo:           yes

- name:           Remove default apache prefork config
  replace:        dest=/etc/apache2/apache2.conf backup=yes regexp='^(?:#[^\n]+\n)*<IfModule mpm_prefork_module>[^<]+?<\/IfModule>' replace='Include prefork.conf' validate='/usr/sbin/apache2ctl -f %s -t'
  sudo:           yes

- name:           Update php.ini's date.timezone
  lineinfile:     dest=/etc/php5/apache2/php.ini backup=yes regexp='date\.timezone' line='date.timezone = "America/Chicago"'
  sudo:           yes

- name:           Update my.conf's bind-address
  lineinfile:     dest=/etc/mysql/my.cnf backup=yes regexp=^bind-address line='bind-address = 0.0.0.0'
  sudo:           yes

- name:           Generate /etc/aliases
  template:       src=aliases dest=/etc/aliases mode=0644
  sudo:           yes

- name:           Update sendmail aliases
  command:        newaliases
  sudo:           yes
